version: 0.2

env:
  variables:
    APP_NAME: "brain-tasks-app"
    ECR_REPO: "brain-tasks-app-repo"
    AWS_REGION: "ap-south-1"
    CLUSTER_NAME: "my-cluster"

phases:
  pre_build:
    commands:
      - echo "__________________________"
      - echo "STARTING PRE-BUILD PHASE"
      - echo "__________________________"

      - aws configure set region $AWS_REGION

      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 346701285224.dkr.ecr.ap-south-1.amazonaws.com

      - echo "Installing kubectl..."
      - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl

  build:
    commands:
      - echo "__________________________"
      - echo "STARTING BUILD PHASE"
      - echo "__________________________"

      - echo "Building Docker image..."
      - docker build -t $APP_NAME .
      - docker tag $APP_NAME:latest 346701285224.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPO:latest

  post_build:
    commands:
      - echo "__________________________"
      - echo "STARTING POST-BUILD PHASE"
      - echo "__________________________"

      - echo "Pushing Docker image to ECR..."
      - docker push 346701285224.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPO:latest

      - echo "Updating kubeconfig for EKS..."
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION --kubeconfig /root/.kube/config
      - export KUBECONFIG=/root/.kube/config

      - echo "Applying Kubernetes manifests..."
      - kubectl apply -f deployment.yaml
      - kubectl apply -f service.yaml

      - echo "Restarting deployment..."
      - kubectl rollout restart deployment $APP_NAME
      - kubectl rollout status deployment/$APP_NAME

      - echo "Fetching LoadBalancer URL..."
      - |
        LOAD_BALANCER=$(kubectl get svc brain-tasks-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "Application deployed at: http://$LOAD_BALANCER"
      - echo "Testing LoadBalancer URL with curl..."
      - curl --retry 5 --retry-delay 10 --retry-connrefused http://$LOAD_BALANCER

artifacts:
  files:
    - appspec.yml
    - deployment.yaml
    - service.yaml
